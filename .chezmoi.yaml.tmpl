# chezmoi:template:missing-key=invalid
config_info: |
  {{- $interactive := stdinIsATTY -}}

  {{- if not (stat (joinPath .chezmoi.homeDir ".config/chezmoi/key.txt")) -}}
  {{-   $instructions := "" -}}
  {{-   if eq .chezmoi.os "windows" -}}
  {{-     $instructions = output (print .chezmoi.sourceDir "/.bin/decrypt-private-key-instructions.bat") .chezmoi.sourceDir -}}
  {{-   else -}}
  {{-     $instructions = output (print .chezmoi.sourceDir "/.bin/decrypt-private-key-instructions.sh") .chezmoi.sourceDir -}}
  {{-   end -}}
  {{-   writeToStdout "Missing key.txt. Please follow the instructions below.\n" writeToStdout $instructions -}}
  {{-   exit 1 -}}
  {{- end -}}

  {{- $data := include ".chezmoidata.yaml.age" | decrypt | fromYaml -}}
  {{- $profiles := include ".chezmoidata_profiles.yaml.age" | decrypt | fromYaml -}}

  {{- $profile := coalesce (env "DATA_profile") (get . "profile") "<no value>" -}}
  {{- range $i := until 5 -}}
  {{-   if hasKey $profiles $profile -}}
  {{-     break -}}
  {{-   else -}}
  {{-     $profile = promptString "Which profile should be used for this machine? (personal/work1/work2)" -}}
  {{-   end -}}
  {{-   if eq $i 4 -}}
  {{-     writeToStdout "‚ùå ERROR: Invalid profile selected\n" -}}
  {{-     exit 1 -}}
  {{-   end -}}
  {{- end -}}

  {{- $profile_data := get $profiles $profile -}}

  {{- $email := coalesce $profile_data.email (env "DATA_email") -}}
  {{- if not $email -}}
  {{-   $email = promptStringOnce . "email" "What is your email address" -}}
  {{- end -}}

  {{- $name := coalesce $data.name (env "DATA_name") -}}
  {{- if not $name -}}
  {{-   $name = promptStringOnce . "name" "What is your name" -}}
  {{- end -}}

  {{- $is_wsl := false -}}
  {{- if .chezmoi.kernel -}}
  {{-   if hasKey .chezmoi.kernel "osrelease" -}}
  {{-     $is_wsl = (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
  {{-   end -}}
  {{- end -}}

  {{- $sourceDir := .chezmoi.sourceDir -}}
  {{- $username := .chezmoi.username -}}

  {{- if eq .chezmoi.os "windows" -}}
  {{-   $sourceDir = printf "%s%s" .chezmoi.homeDir "/AppData/Local/chezmoi" -}}
  {{-   $username = env "USERNAME" -}}
  {{- end -}}

  {{- $personal_device := eq $profile "personal" -}}
  {{- $work_device := not (eq $profile "personal") -}}

  {{ "" }}
  Generated for user={{ $username }}, hostname={{ .chezmoi.hostname }}, generated_at={{ now | date "2006-01-02 15:04:05"}}

encryption: age
age:
  identity: "~/.config/chezmoi/key.txt"
  recipient: "age1cckqh88dv9m75dcd9ftkjqxuc6y8zsvp40yavdkp37l5cvajraxs0lxnlj"

data:
  profile: {{ $profile }}
  email: {{ $email }}
  name: {{ $name }}
  personal_device: {{ $personal_device }}
  work_device: {{ $work_device }}
  is_wsl: {{ $is_wsl }}
  git:
    signingkey: {{ $data.git.signingkey }}
  profiles: # list of profiles {{ "\n" }}{{ $profiles | toYaml | indent 4 }}
  # desktop or server
