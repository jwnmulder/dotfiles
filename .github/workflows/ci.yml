name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  linux-desktop:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - personal
          - work1
          - work2
        container:
          - ubuntu:latest
          - debian:latest

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites
        run: apt-get update -q && apt-get install -y -q python3 python3-pip python3-venv curl git

      - name: Setup PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Cache Chezmoi external
        uses: actions/cache@v4
        with:
          path: "~/.cache/chezmoi/external"
          key: ${{ runner.os }}-${{ matrix.profile }}-${{ matrix.container }}-chezmoi-external

      - name: Decrypt age key
        env:
          AGE_DECRYPT_PASS: ${{ secrets.AGE_DECRYPT_PASS }}
        run: |
          mkdir -p ${HOME}/.config/chezmoi
          echo "${{ secrets.CHEZMOI_KEY }}" | base64 -d > ${HOME}/.config/chezmoi/key.txt

      - name: Chezmoi init & apply
        env:
          DATA_profile: ${{ matrix.profile }}
          IS_DESKTOP: "true"
        run: |
          git config --global --add safe.directory $(pwd)
          ./install.sh

      - name: Assert
        run: |
          if ! grep -q "is_desktop: true" ${HOME}/.config/chezmoi/chezmoi.yaml; then
            echo "::error file=chezmoi.yaml::is_desktop: true not found"
            exit 1
          fi

      - name: Remove age key
        if: always()
        run: |
          rm ${HOME}/.config/chezmoi/key.txt


  linux-server:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - personal
          - work1
        container:
          - ubuntu:latest
          - debian:latest

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites
        run: apt-get update -q && apt-get install -y -q python3 python3-pip curl

      - name: Setup PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Cache Chezmoi external
        uses: actions/cache@v4
        with:
          path: "~/.cache/chezmoi/external"
          key: ${{ runner.os }}-${{ matrix.profile }}-${{ matrix.container }}-chezmoi-external

      - name: Chezmoi init & apply
        env:
          DATA_profile: ${{ matrix.profile }}
        run: |
          ./install.sh

      - name: Assert
        run: |
          if ! grep -q "is_server: true" ${HOME}/.config/chezmoi/chezmoi.yaml; then
            echo "::error file=chezmoi.yaml::is_server: true not found"
            exit 1
          fi

  linux-server-armv7:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - personal

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Cache Chezmoi external
        uses: actions/cache@v4
        with:
          path: "~/.cache/chezmoi/external"
          key: ${{ runner.os }}-${{ matrix.profile }}-chezmoi-external

      - name: Chezmoi init & apply
        uses: pguyot/arm-runner-action@v2
        env:
          DATA_profile: ${{ matrix.profile }}
        with:
          # base_image: dietpi:rpi_armv7_bullseye
          base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv7-Bookworm.img.xz
          cpu: cortex-a7
          copy_artifact_path: results
          # cpu: pxa250
          commands: |
            ./install.sh

            mkdir -p results
            cp ${HOME}/.config/chezmoi/chezmoi.yaml results/chezmoi.yaml
            chmod -R a+r results

      - name: Assert
        run: |
          if ! grep -q "is_server: true" results/chezmoi.yaml; then
            echo "::error file=chezmoi.yaml::is_server: true not found"
            exit 1
          fi

  windows-desktop:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - personal
        shell:
          - pwsh
          - pwsh-in-powershell
          - powershell

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites
        shell: pwsh
        run: |
          # Install scoop to install winget
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          echo "$HOME\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

          # Install winget & chezmoi
          scoop install winget
          scoop install chezmoi

      - name: Chezmoi init & apply - powershell
        if: matrix.shell == 'powershell'
        env:
          DATA_profile: ${{ matrix.profile }}
          CHEZMOI_PS1_COMMAND: powershell.exe
        shell: powershell
        run: |
          echo "Running chezmoi init --apply"
          chezmoi init --apply --source $Env:GITHUB_WORKSPACE

      - name: Chezmoi init & apply - pwsh
        if: matrix.shell == 'pwsh'
        env:
          DATA_profile: ${{ matrix.profile }}
          CHEZMOI_PS1_COMMAND: pwsh.exe
        shell: pwsh
        run: |
          echo "Running chezmoi init --apply"
          chezmoi init --apply --source $Env:GITHUB_WORKSPACE

      - name: Chezmoi init & apply - pwsh-in-powershell
        if: matrix.shell == 'pwsh-in-powershell'
        env:
          DATA_profile: ${{ matrix.profile }}
          CHEZMOI_PS1_COMMAND: pwsh.exe
        shell: powershell
        run: |
          echo "Running chezmoi init --apply"
          chezmoi init --apply --source $Env:GITHUB_WORKSPACE
